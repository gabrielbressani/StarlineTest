@model StarlineTest.MVC.ViewModel.QuestionViewModel
@using StarlineTest.Domain.Enumerators

<div class="modal" id="create-question-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">
                    Adicionar Questão
                </h4>
            </div>
            <div id="container-create-question" class="modal-body">
                @using (Ajax.BeginForm(new AjaxOptions() { UpdateTargetId = "main-modal", OnSuccess = "reloadQuestions" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(model => model.UserId)

                    if (Model?.QuestionId > 0)
                    {
                        @Html.HiddenFor(model => model.QuestionId)
                    }

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Enunciated, "Enunciado", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Enunciated, new {  @class = "form-control w100", rows = 5})
                                @Html.ValidationMessageFor(model => model.Enunciated, "", new { @class = "text-danger block" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TypeOfQuestion, "Tipo da Questão", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                <label class="radio-inline" for="discursive">
                                    @Html.RadioButton("TypeOfQuestion", 
                                        TypeOfQuestion.Discursive, 
                                        isChecked: Model.TypeOfQuestion == TypeOfQuestion.Discursive, 
                                        htmlAttributes: new { id = "discursive"})
                                        Discursiva
                                </label>
                                <label class="radio-inline" for="objective">
                                    @Html.RadioButton("TypeOfQuestion",
                                        StarlineTest.Domain.Enumerators.TypeOfQuestion.Objective,
                                        isChecked: Model.TypeOfQuestion == TypeOfQuestion.Objective,
                                        htmlAttributes: new { id = "objective" })
                                        Objetiva
                                </label>
                            </div>
                        </div>

                        <div class="form-group" id="answers-container">
                            @Html.LabelFor(model => model.Answers, "Respostas", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Answers, new { @class = "form-control w100", rows = 5 })
                                <small>
                                    Separe as respostas por ;
                                </small>
                                @Html.ValidationMessageFor(model => model.Answers, "", new { @class = "text-danger block" })
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" onclick="$('form', '#container-create-question').submit()" class="btn btn-default">Salvar</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    $(function () {
        $("#create-question-modal").modal({ backdrop: false });
        $("input[type=radio]").click(toggleAnswer)
        toggleAnswer();
    })

    function toggleAnswer() {
        if ($("#discursive").is(":checked"))
        {
            $("#Answers").val("");
            $("#answers-container").hide();
        }
        else
        {
            $("#answers-container").show();
        }
    }

</script>
